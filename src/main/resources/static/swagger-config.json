{
  "openapi": "3.0.1",
  "info": {
    "title": "Simple Library API",
    "description": "This is a simple library API made for the module of Spring boot in the +devs2blu program.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/publisher": {
      "get": {
        "tags": [
          "publisher"
        ],
        "summary": "Get all publishers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublisherResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "publisher"
        ],
        "summary": "Create a new publisher",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/book": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "book"
        ],
        "summary": "Create a new book",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/author": {
      "get": {
        "tags": [
          "author"
        ],
        "summary": "Get all authors",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorResponseDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "author"
        ],
        "summary": "Create a new author",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/publisher/{id}": {
      "get": {
        "tags": [
          "publisher"
        ],
        "summary": "Get a publisher by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "publisher"
        ],
        "summary": "Update a publisher by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "publisher"
        ],
        "summary": "Delete a publisher by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Get a book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "book"
        ],
        "summary": "Update a book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "book"
        ],
        "summary": "Delete a book by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/author/{id}": {
      "get": {
        "tags": [
          "author"
        ],
        "summary": "Get a author by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "author"
        ],
        "summary": "Update a author by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "author"
        ],
        "summary": "Delete a author by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/publisher/{id}/books": {
      "get": {
        "tags": [
          "publisher"
        ],
        "summary": "Get all books from a publisher",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/author/{id}/books": {
      "get": {
        "tags": [
          "author"
        ],
        "summary": "Get all books from an author",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookResponseDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message"
          },
          "status": {
            "type": "string",
            "description": "The http status code"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldErrorDto"
            }
          }
        }
      },
      "FieldErrorDto": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field that has the error"
          },
          "message": {
            "type": "string",
            "description": "The error message of the field"
          }
        }
      },
      "PublisherRequestDto": {
        "required": [
          "name",
          "phone_number"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "The address of the publisher",
            "example": "Rua Sete de Setembro, Centro - Blumenau - SC"
          },
          "phone_number": {
            "maxLength": 16,
            "minLength": 9,
            "type": "string"
          }
        }
      },
      "PublisherResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "BookRequestDto": {
        "required": [
          "author",
          "genre",
          "isbn",
          "publication_year",
          "publisher",
          "quantity",
          "title"
        ],
        "type": "object",
        "properties": {
          "isbn": {
            "maxLength": 13,
            "minLength": 13,
            "type": "string",
            "description": "The ISBN of the book (International Standard Book Number)"
          },
          "title": {
            "type": "string"
          },
          "genre": {
            "type": "string",
            "enum": [
              "SCIENCE_FICTION",
              "SATIRE",
              "DRAMA",
              "ACTION_AND_ADVENTURE",
              "ROMANCE",
              "MYSTERY",
              "HORROR",
              "SELF_HELP",
              "GUIDE",
              "TRAVEL",
              "CHILDREN",
              "RELIGION_SPIRITUALITY_AND_NEW_AGE",
              "SCIENCE",
              "HISTORY",
              "MATH",
              "ANTHOLOGY",
              "POETRY",
              "ENCYCLOPEDIAS",
              "DICTIONARIES",
              "COMICS",
              "ART",
              "COOKBOOKS",
              "DIARIES",
              "JOURNALS",
              "PRAYER_BOOKS",
              "SERIES",
              "TRILOGY",
              "BIOGRAPHIES",
              "AUTOBIOGRAPHIES",
              "FANTASY"
            ]
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of copies of the book"
          },
          "author": {
            "type": "string",
            "format": "uuid",
            "description": "The author id"
          },
          "publisher": {
            "type": "string",
            "format": "uuid",
            "description": "The publisher id"
          },
          "publication_year": {
            "type": "integer",
            "format": "int32",
            "example": 2003,
            "description": "The year when the book was published"
          }
        }
      },
      "BookResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isbn": {
            "type": "string",
            "description": "The ISBN of the book (International Standard Book Number)"
          },
          "title": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "The quantity of copies of the book"
          },
          "publication_year": {
            "type": "integer",
            "format": "int32",
            "example": 2003,
            "description": "The year when the book was published"
          },
          "author_id": {
            "type": "string",
            "format": "uuid"
          },
          "publisher_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "AuthorRequestDto": {
        "required": [
          "birth_date",
          "name",
          "nationality"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "nationality": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "example": "27/11/2003"
          }
        }
      },
      "AuthorResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "format": "date",
            "example": "27/11/2003"
          }
        }
      }
    }
  }
}